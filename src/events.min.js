(function(exports){"use strict";function isFunction(func){return typeof func==="function"}function isString(str){return typeof str==="string"||str.constructor===String}var Events=function(){var f=function(){};f.fn=f.prototype;f.fn.on=function(event,callback,obj){if(!isString(event)){throw new Error("event is expected to be a string: "+typeof event+" found.")}if(!isFunction(callback)){throw new Error("callback is expected to be a function: "+typeof callback+" found.")}this.events||(this.events={});this.events[event]||(this.events[event]=event);this.callbacks||(this.callbacks={});this.callbacks[event]||(this.callbacks[event]=[]);this.callbacks[event].push({obj:obj||undefined,callback:callback})};f.fn.off=function(event,callback,obj){if(!isString(event)){throw new Error("event is expected to be a string: "+typeof event+" found.")}if(!isFunction(callback)){throw new Error("callback is expected to be a function: "+typeof callback+" found.")}var i=-1,callbackObj,callbacks;if(this.callbacks&&this.callbacks[event]){callbacks=this.callbacks[event];while(callbackObj=callbacks[++i]){if(callbackObj.callback===callback&&callbackObj.obj===obj){callbacks.splice(i,1);return}}}};f.fn.trigger=function(event){if(!isString(event)){throw new Error("event is expected to be a string: "+typeof event+" found.")}var i=-1,callbacks,callbackObj;if(this.events&&this.events[event]){callbacks=this.callbacks[event];while(callbackObj=callbacks[++i]){callbackObj.callback.call(callbackObj.obj||this,this)}}};return f}();exports.Events=Events})(this);